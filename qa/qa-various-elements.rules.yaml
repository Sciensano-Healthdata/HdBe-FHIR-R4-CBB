- name: name-mandatory
  status: "Checking if all conformance resources contain a name"
  files: 
    - logical models/*.xml
    - resources/*.xml
    - terminology/*.xml
  filter: (StructureDefinition or ValueSet or CodeSystem or CapabilityStatement or SearchParameter or NamingSystem or ConceptMap).exists()
  predicate: name.exists()
  error-message: "Resource does not have a mapping on the root to a logical model" 

- name: name-conformance
  status: "Checking if all profile naming is conform to profiling guidelines"
  files: 
    - logical models/*.xml
    - resources/*.xml
  predicate: StructureDefinition.name.substring(0, 1).matches('[A-Z]') and StructureDefinition.name.substring(1) = StructureDefinition.id.substring(1).replace('-','').replace('.', '')
  error-message: "Resource name does not conform to profiling guidelines" 

- name: title-mandatory
  status: "Checking if all profiles and logical models contain a title"
  files: 
    - logical models/*.xml
    - resources/*.xml
  filter: StructureDefinition.exists()
  predicate: title.exists()
  error-message: "Resource does not contain a title" 

- name: description-mandatory
  status: "Checking if all profiles and logical models contain a description"
  files: 
    - logical models/*.xml
    - resources/*.xml
    - terminology/*.xml
  filter: (StructureDefinition or ValueSet or CodeSystem or CapabilityStatement or SearchParameter or NamingSystem or ConceptMap).exists()
  predicate: description.exists()
  error-message: "Resource does not contain a description" 

- name: copyright-mandatory
  status: "Checking if all profiles and logical models contain a copyright"
  files: 
    - logical models/*.xml
    - resources/*.xml
    - terminology/*.xml
  filter: (StructureDefinition or ValueSet or CodeSystem or CapabilityStatement or SearchParameter or ConceptMap).exists()
  predicate: copyright.exists()
  error-message: "Resource does not contain a copyright" 

- name: contact-filled
  status: "Checking if all conformance resources contain a name"
  files: 
    - logical models/*.xml
    - resources/*.xml
    - terminology/*.xml
  filter: (StructureDefinition or ValueSet or CodeSystem or CapabilityStatement or SearchParameter or NamingSystem or ConceptMap).exists()
  predicate: contact.name.exists() and ('Service portal â€“ healthdata.be' in contact.name) and contact.telecom.exists()
  error-message: "Contact not filled (correctly)" 

- name: publisher-filled
  status: "Checking if all resources have 'Healthdata.be (Sciensano)' as publisher"
  files: 
    - logical models/*.xml
    - resources/*.xml
    - terminology/*.xml
  filter: (StructureDefinition or ValueSet or CodeSystem or CapabilityStatement or SearchParameter or NamingSystem or ConceptMap).exists()
  predicate: publisher = 'Healthdata.be (Sciensano)'
  error-message: "Incorrect publisher info, should be'Healthdata.be (Sciensano)'"  

- name: abstract-false
  status: "Checking if all profiles are not considered abstract"
  files: 
    - resources/*.xml
  filter: Conformance
  predicate: abstract = false
  error-message: "Resource has abstract = true" 

- name: example-profile-mandatory
  status: "Checking if example has a meta.profile"
  files: 
    - examples/*.xml
  filter: Resource
  predicate: meta.profile.exists()
  error-message: "Resource does not claim conformance to a profile" 

- name: example-reference-display-mandatory
  status: "Checking if all References have a display value"
  files: 
    - examples/*.xml
  filter: Resource
  predicate: descendants().where($this.is(Reference)).all(display.exists() or extension.exists())
  error-message: "Reference does not have a display value" 

- name: example-reference-makeup
  status: "Checking if all literal References (Reference.reference) are an absolute URL, a relative URL or an internal fragment reference (contained)."
  files: 
    - examples/*.xml
  filter: Resource
  predicate: descendants().where($this.is(Reference)).reference.all(
                startsWith('http://') or
                startsWith('https://') or
                startsWith('#') or
                matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or
                matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or
                (startsWith('urn:').not() and startsWith('#').not() and matches('^[A-Za-z]{3,}/[^/]+$'))
                )
  error-message: "Reference.reference is not absolute URL, relative URL or an internal fragment reference."  

- name: example-codeableconcept-display-text-mandatory
  status: "Checking if all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension).e"
  files: 
    - examples/*.xml
  filter: Resource
  predicate: descendants().where($this.is(CodeableConcept))
                .all((coding.display.exists() or (coding.exists().not() and text.exists())) or extension.exists())
  error-message: "CodeableConcept does not have a .coding.display or a .text value or an extension." 
